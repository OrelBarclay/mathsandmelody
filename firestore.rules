rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && request.auth.token.role == 'admin';
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Bookings collection rules
    match /bookings/{bookingId} {
      // Allow read if user is authenticated and either admin or the owner
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      // Allow create if user is authenticated
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      
      // Allow update if user is admin or the owner
      allow update: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      
      // Allow delete if user is admin
      allow delete: if isAdmin();
    }

    // Users collection rules
    match /users/{userId} {
      // Allow read if user is authenticated and either admin or the owner
      allow read: if isAuthenticated() && (
        isAdmin() || 
        request.auth.uid == userId
      );
      
      // Allow create if user is authenticated
      allow create: if isAuthenticated() && 
        request.resource.data.uid == request.auth.uid;
      
      // Allow update if user is admin or the owner
      allow update: if isAuthenticated() && (
        isAdmin() || 
        request.auth.uid == userId
      );
      
      // Allow delete if user is admin
      allow delete: if isAdmin();
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 